name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run TypeScript check
        run: npm run typecheck

      - name: Run linting and capture results
        if: matrix.node-version == '18.x'
        run: |
          # Run linting and capture error count
          LINT_OUTPUT=$(npm run lint 2>&1 || true)
          LINT_ERRORS=$(echo "$LINT_OUTPUT" | grep -oP '\d+(?= problems)' | head -1 || echo "0")
          echo "LINT_ERRORS=$LINT_ERRORS" >> $GITHUB_ENV
          echo "Linting errors: $LINT_ERRORS"
          # Still show full output for debugging
          echo "$LINT_OUTPUT"
        continue-on-error: true

      - name: Generate linting badge data
        if: matrix.node-version == '18.x'
        run: |
          mkdir -p ./badges
          if [ "$LINT_ERRORS" -eq 0 ]; then
            COLOR="brightgreen"
            MESSAGE="0 errors"
          elif [ "$LINT_ERRORS" -lt 10 ]; then
            COLOR="yellow"
            MESSAGE="$LINT_ERRORS errors"
          elif [ "$LINT_ERRORS" -lt 50 ]; then
            COLOR="orange"
            MESSAGE="$LINT_ERRORS errors"
          else
            COLOR="red"
            MESSAGE="$LINT_ERRORS errors"
          fi
          echo "{\"schemaVersion\": 1, \"label\": \"lint\", \"message\": \"$MESSAGE\", \"color\": \"$COLOR\"}" > ./badges/lint-summary.json
          cat ./badges/lint-summary.json

      - name: Commit linting badge data
        if: matrix.node-version == '18.x'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add ./badges/lint-summary.json
          git diff --staged --quiet || git commit -m "Update linting badge data [skip ci]"
          git push

      - name: Run tests
        run: npm test

      - name: Run tests with coverage
        run: npm run coverage

      - name: Extract coverage percentage
        if: matrix.node-version == '18.x'
        run: |
          # Extract coverage percentage from vitest output or coverage files
          COVERAGE=$(npm run coverage 2>&1 | grep -oP 'All files.*?(\d+\.?\d*)%' | grep -oP '\d+\.?\d*' | tail -1 || echo "0")
          echo "COVERAGE_PERCENT=$COVERAGE" >> $GITHUB_ENV
          echo "Coverage: $COVERAGE%"

      - name: Generate coverage badge data
        if: matrix.node-version == '18.x'
        run: |
          mkdir -p ./coverage
          echo "{\"schemaVersion\": 1, \"label\": \"coverage\", \"message\": \"${COVERAGE_PERCENT}%\", \"color\": \"brightgreen\"}" > ./coverage/coverage-summary.json
          cat ./coverage/coverage-summary.json

      - name: Commit coverage summary
        if: matrix.node-version == '18.x'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add ./coverage/coverage-summary.json
          git diff --staged --quiet || git commit -m "Update coverage summary [skip ci]"
          git push

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build