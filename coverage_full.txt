
> @flo-ai/codex-ts-sdk@0.0.7 coverage
> vitest run --coverage


 RUN  v3.2.4 /Users/greg/Dev/git/codex-ts-sdk
      Coverage enabled with v8

 ✓ tests/internal/StatusStore.test.ts > StatusStore > stores rate limits and usage from token count events 2ms
 ✓ tests/internal/StatusStore.test.ts > StatusStore > stores session metadata from configuration events 0ms
 ✓ tests/internal/StatusStore.test.ts > StatusStore > clears all stored state when clear is called 0ms
 ✓ tests/internal/StatusStore.test.ts > StatusStore > returns defensive copies of stored data 0ms
 ✓ tests/internal/StatusStore.test.ts > StatusStore > records model context windows from task started events 0ms
 ✓ tests/internal/StatusStore.test.ts > StatusStore > records last agent message from task complete events 0ms
 × tests/internal/StatusStore.test.ts > StatusStore > handles edge case time windows correctly 3ms
   → expected undefined to be '5h' // Object.is equality
 × tests/internal/StatusStore.test.ts > StatusStore > handles monthly and annual time windows 0ms
   → expected undefined to be 'Monthly' // Object.is equality
 × tests/internal/StatusStore.test.ts > StatusStore > handles edge case for window label capitalization 0ms
   → expected undefined to be '2h' // Object.is equality
 ✓ tests/monitoring/report-generator.test.ts > RateLimitReportGenerator > generateReport > should generate a complete HTML report 11ms
 ✓ tests/monitoring/report-generator.test.ts > RateLimitReportGenerator > generateReport > should include custom title when provided 0ms
 ✓ tests/monitoring/report-generator.test.ts > RateLimitReportGenerator > generateReport > should apply dark theme styles 0ms
 ✓ tests/monitoring/report-generator.test.ts > RateLimitReportGenerator > generateReport > should apply light theme styles 0ms
 ✓ tests/monitoring/report-generator.test.ts > RateLimitReportGenerator > generateReport > should include raw data section when requested 0ms
 ✓ tests/monitoring/report-generator.test.ts > RateLimitReportGenerator > generateReport > should not include raw data section by default 0ms
 ✓ tests/monitoring/report-generator.test.ts > RateLimitReportGenerator > generateReport > should use custom chart height 0ms
 ✓ tests/monitoring/report-generator.test.ts > RateLimitReportGenerator > summary section > should display safe status correctly 0ms
 ✓ tests/monitoring/report-generator.test.ts > RateLimitReportGenerator > summary section > should display warning status correctly 0ms
 ✓ tests/monitoring/report-generator.test.ts > RateLimitReportGenerator > summary section > should display critical status correctly 0ms
 ✓ tests/monitoring/report-generator.test.ts > RateLimitReportGenerator > summary section > should display all recommendations 0ms
 ✓ tests/monitoring/report-generator.test.ts > RateLimitReportGenerator > statistics section > should display primary rate limit statistics 0ms
 ✓ tests/monitoring/report-generator.test.ts > RateLimitReportGenerator > statistics section > should display secondary rate limit statistics 0ms
 ✓ tests/monitoring/report-generator.test.ts > RateLimitReportGenerator > statistics section > should format projection correctly 0ms
 ✓ tests/monitoring/report-generator.test.ts > RateLimitReportGenerator > statistics section > should handle missing projection 0ms
 ✓ tests/monitoring/report-generator.test.ts > RateLimitReportGenerator > statistics section > should display data overview 0ms
 ✓ tests/monitoring/report-generator.test.ts > RateLimitReportGenerator > chart generation > should include Chart.js initialization script 0ms
 ✓ tests/monitoring/report-generator.test.ts > RateLimitReportGenerator > chart generation > should include both datasets 0ms
 ✓ tests/monitoring/report-generator.test.ts > RateLimitReportGenerator > chart generation > should sort data points chronologically 0ms
 ✓ tests/monitoring/report-generator.test.ts > RateLimitReportGenerator > chart generation > should apply theme colors to chart 0ms
 ✓ tests/monitoring/report-generator.test.ts > RateLimitReportGenerator > raw data table > should display data in reverse chronological order 0ms
 ✓ tests/monitoring/report-generator.test.ts > RateLimitReportGenerator > raw data table > should format values correctly in raw data table 0ms
 ✓ tests/monitoring/report-generator.test.ts > RateLimitReportGenerator > raw data table > should handle missing values in raw data 0ms
 ✓ tests/monitoring/report-generator.test.ts > RateLimitReportGenerator > responsive design > should include responsive CSS rules 0ms
 ✓ tests/monitoring/report-generator.test.ts > RateLimitReportGenerator > responsive design > should include viewport meta tag 0ms
 ✓ tests/monitoring/report-generator.test.ts > RateLimitReportGenerator > chart legend > should include visual chart legend 0ms
 ✓ tests/monitoring/report-generator.test.ts > RateLimitReportGenerator > footer > should include footer with attribution 0ms
 ✓ tests/monitoring/report-generator.test.ts > RateLimitReportGenerator > timestamp formatting > should include generation timestamp 0ms
 ✓ tests/persistence/session-serializer.test.ts > SessionSerializer > createSessionMetadata > should create session metadata with required fields 2ms
 ✓ tests/persistence/session-serializer.test.ts > SessionSerializer > createSessionMetadata > should merge custom metadata 0ms
 ✓ tests/persistence/session-serializer.test.ts > SessionSerializer > createSessionMetadata > should detect originator from environment override 0ms
 ✓ tests/persistence/session-serializer.test.ts > SessionSerializer > createSessionMetadata > should detect originator from npm lifecycle event 0ms
 ✓ tests/persistence/session-serializer.test.ts > SessionSerializer > createSessionMetadata > should prioritize environment override over npm lifecycle 0ms
 ✓ tests/persistence/session-serializer.test.ts > SessionSerializer > createSessionMetadata > should handle missing CLI version gracefully 0ms
 ✓ tests/persistence/session-serializer.test.ts > SessionSerializer > createSessionMetadata > should handle current working directory errors 0ms
 ✓ tests/persistence/session-serializer.test.ts > SessionSerializer > createSessionMetadata > should generate unique session IDs 0ms
 ✓ tests/persistence/session-serializer.test.ts > SessionSerializer > createSessionMetadata > should generate chronologically ordered timestamps 11ms
 ✓ tests/persistence/session-serializer.test.ts > SessionSerializer > detectOriginator > should return "unknown" when no originator is detected 0ms
 ✓ tests/persistence/session-serializer.test.ts > SessionSerializer > detectOriginator > should return environment override when present 0ms
 ✓ tests/persistence/session-serializer.test.ts > SessionSerializer > detectOriginator > should return npm lifecycle event when present 0ms
 ✓ tests/persistence/session-serializer.test.ts > SessionSerializer > detectOriginator > should handle empty environment values 0ms
 ✓ tests/persistence/session-serializer.test.ts > SessionSerializer > detectOriginator > should handle various npm lifecycle events 0ms
 ✓ tests/persistence/session-serializer.test.ts > SessionSerializer > generateSessionId > should generate UUID v4 format 0ms
 ✓ tests/persistence/session-serializer.test.ts > SessionSerializer > generateSessionId > should generate unique IDs consistently 1ms
 ✓ tests/persistence/session-serializer.test.ts > SessionSerializer > error handling > should handle CLI version detection errors 0ms
 ✓ tests/persistence/session-serializer.test.ts > SessionSerializer > error handling > should handle process environment access errors 0ms
 ✓ tests/persistence/session-serializer.test.ts > SessionSerializer > configuration > should accept custom session ID generator 0ms
 ✓ tests/persistence/session-serializer.test.ts > SessionSerializer > configuration > should accept custom originator detector 0ms
 ✓ tests/persistence/session-serializer.test.ts > SessionSerializer > configuration > should handle custom functions that throw errors 0ms
 ✓ tests/persistence/session-serializer.test.ts > SessionSerializer > compatibility > should maintain backward compatibility with existing session format 0ms
 ✓ tests/persistence/session-serializer.test.ts > SessionSerializer > compatibility > should not include git-related fields 0ms
 ✓ tests/utils/fileOperations.test.ts > fileOperations > readRolloutFile > should read and parse JSONL format 2ms
 ✓ tests/utils/fileOperations.test.ts > fileOperations > readRolloutFile > should read and parse JSON format 0ms
 ✓ tests/utils/fileOperations.test.ts > fileOperations > readRolloutFile > should detect JSONL format by content 0ms
 ✓ tests/utils/fileOperations.test.ts > fileOperations > readRolloutFile > should throw RolloutFileError for non-existent file 1ms
 ✓ tests/utils/fileOperations.test.ts > fileOperations > readRolloutFile > should throw RolloutParseError for invalid JSON 0ms
 ✓ tests/utils/fileOperations.test.ts > fileOperations > readRolloutFile > should throw RolloutParseError for empty file 0ms
 ✓ tests/utils/fileOperations.test.ts > fileOperations > readRolloutFile > should handle missing session in JSONL format 0ms
 ✓ tests/utils/fileOperations.test.ts > fileOperations > readRolloutFile > should handle invalid event format 0ms
 ✓ tests/utils/fileOperations.test.ts > fileOperations > writeRolloutFile > should write JSONL format 1ms
 ✓ tests/utils/fileOperations.test.ts > fileOperations > writeRolloutFile > should write JSON format 0ms
 ✓ tests/utils/fileOperations.test.ts > fileOperations > writeRolloutFile > should write pretty printed JSON 0ms
 ✓ tests/utils/fileOperations.test.ts > fileOperations > writeRolloutFile > should write pretty printed JSONL 0ms
 ✓ tests/utils/fileOperations.test.ts > fileOperations > writeRolloutFile > should create directory if it does not exist 0ms
 ✓ tests/utils/fileOperations.test.ts > fileOperations > writeRolloutFile > should throw RolloutFileError on write failure 0ms
 ✓ tests/utils/fileOperations.test.ts > fileOperations > validateRolloutFile > should validate valid JSONL file 0ms
 ✓ tests/utils/fileOperations.test.ts > fileOperations > validateRolloutFile > should validate valid JSON file 0ms
 ✓ tests/utils/fileOperations.test.ts > fileOperations > validateRolloutFile > should return error for non-existent file 0ms
 ✓ tests/utils/fileOperations.test.ts > fileOperations > validateRolloutFile > should return error for empty file 0ms
 ✓ tests/utils/fileOperations.test.ts > fileOperations > validateRolloutFile > should return error for invalid JSON 0ms
 ✓ tests/utils/fileOperations.test.ts > fileOperations > validateRolloutFile > should return error for missing session metadata 0ms
 ✓ tests/utils/fileOperations.test.ts > fileOperations > validateRolloutFile > should handle file read errors gracefully 0ms
 ✓ tests/utils/fileOperations.test.ts > fileOperations > extractSessionMetadata > should extract metadata from JSONL file 0ms
 ✓ tests/utils/fileOperations.test.ts > fileOperations > extractSessionMetadata > should extract metadata from JSON file 0ms
 ✓ tests/utils/fileOperations.test.ts > fileOperations > extractSessionMetadata > should return null for non-existent file 0ms
 ✓ tests/utils/fileOperations.test.ts > fileOperations > extractSessionMetadata > should return null for empty file 0ms
 ✓ tests/utils/fileOperations.test.ts > fileOperations > extractSessionMetadata > should return null for invalid format 0ms
 ✓ tests/utils/fileOperations.test.ts > fileOperations > extractSessionMetadata > should handle parse errors gracefully 0ms
 ✓ tests/utils/fileOperations.test.ts > fileOperations > createTemplatedPath > should replace single variable 0ms
 ✓ tests/utils/fileOperations.test.ts > fileOperations > createTemplatedPath > should replace multiple variables 0ms
 ✓ tests/utils/fileOperations.test.ts > fileOperations > createTemplatedPath > should replace same variable multiple times 0ms
 ✓ tests/utils/fileOperations.test.ts > fileOperations > createTemplatedPath > should handle special regex characters in variable names 0ms
 ✓ tests/utils/fileOperations.test.ts > fileOperations > createTemplatedPath > should leave unmatched variables unchanged 0ms
 ✓ tests/utils/fileOperations.test.ts > fileOperations > createTemplatedPath > should handle empty variables object 0ms
 ✓ tests/utils/fileOperations.test.ts > fileOperations > createTemplatedPath > should handle template without variables 0ms
 ✓ tests/utils/fileOperations.test.ts > fileOperations > ensureDirectoryExists > should create directory if it does not exist 0ms
 ✓ tests/utils/fileOperations.test.ts > fileOperations > ensureDirectoryExists > should not create directory if it already exists 0ms
 ✓ tests/utils/fileOperations.test.ts > fileOperations > ensureDirectoryExists > should handle nested directory paths 0ms
 ✓ tests/utils/fileOperations.test.ts > fileOperations > edge cases and error handling > should handle session without optional instructions 0ms
 ✓ tests/utils/fileOperations.test.ts > fileOperations > edge cases and error handling > should handle events without optional metadata 0ms
 ✓ tests/utils/fileOperations.test.ts > fileOperations > edge cases and error handling > should validate session metadata fields 0ms
 ✓ tests/utils/fileOperations.test.ts > fileOperations > edge cases and error handling > should validate event payload structure 0ms
 ✓ tests/monitoring/mock-data-generator.test.ts > MockDataGenerator > generateMockData > should generate mock data for normal scenario 3ms
 ✓ tests/monitoring/mock-data-generator.test.ts > MockDataGenerator > generateMockData > should generate different data for heavy usage scenario 0ms
 ✓ tests/monitoring/mock-data-generator.test.ts > MockDataGenerator > generateMockData > should generate spike patterns for rate limit spike scenario 0ms
 ✓ tests/monitoring/mock-data-generator.test.ts > MockDataGenerator > generateMockData > should generate low activity for quiet period scenario 0ms
 ✓ tests/monitoring/mock-data-generator.test.ts > MockDataGenerator > generateMockData > should respect duration and interval parameters 1ms
 ✓ tests/monitoring/mock-data-generator.test.ts > MockDataGenerator > generateMockData > should include proper timestamp progression 3ms
 ✓ tests/monitoring/mock-data-generator.test.ts > MockDataGenerator > generateMockData > should generate different data on subsequent calls 0ms
 ✓ tests/monitoring/mock-data-generator.test.ts > MockDataGenerator > generateMockData > should handle edge cases with minimal duration 2ms
 ✓ tests/monitoring/mock-data-generator.test.ts > MockDataGenerator > generateWebsiteData > should generate and save website data to file 2ms
 ✓ tests/monitoring/mock-data-generator.test.ts > MockDataGenerator > generateWebsiteData > should use default output path when not provided 0ms
 ✓ tests/monitoring/mock-data-generator.test.ts > MockDataGenerator > generateWebsiteData > should handle file write errors 1ms
 ✓ tests/monitoring/mock-data-generator.test.ts > MockDataGenerator > generateWebsiteData > should create directory if it does not exist 0ms
 ✓ tests/monitoring/mock-data-generator.test.ts > MockDataGenerator > scenario-specific data generation > should generate normal scenario with steady metrics 0ms
 ✓ tests/monitoring/mock-data-generator.test.ts > MockDataGenerator > scenario-specific data generation > should generate heavy usage scenario with high metrics 0ms
 ✓ tests/monitoring/mock-data-generator.test.ts > MockDataGenerator > scenario-specific data generation > should generate rate limit spike scenario with volatility 0ms
 ✓ tests/monitoring/mock-data-generator.test.ts > MockDataGenerator > scenario-specific data generation > should generate quiet period scenario with low metrics 0ms
 ✓ tests/monitoring/mock-data-generator.test.ts > MockDataGenerator > scenario-specific data generation > should generate error prone scenario with high error rates 0ms
 ✓ tests/monitoring/mock-data-generator.test.ts > MockDataGenerator > data consistency and validation > should generate data with proper structure for all categories 1ms
 ✓ tests/monitoring/mock-data-generator.test.ts > MockDataGenerator > data consistency and validation > should generate realistic value ranges 0ms
 ✓ tests/monitoring/mock-data-generator.test.ts > MockDataGenerator > data consistency and validation > should maintain temporal consistency 0ms
 ✓ tests/monitoring/mock-data-generator.test.ts > MockDataGenerator > data consistency and validation > should calculate summary statistics correctly 0ms
 ✓ tests/monitoring/mock-data-generator.test.ts > MockDataGenerator > configuration and options > should handle different logger configurations 0ms
 ✓ tests/monitoring/mock-data-generator.test.ts > MockDataGenerator > configuration and options > should work without logger 0ms
 ✓ tests/monitoring/mock-data-generator.test.ts > MockDataGenerator > configuration and options > should handle invalid scenario gracefully 0ms
 ✓ tests/persistence/rollout-recorder.test.ts > RolloutRecorder > startRecording > should start recording successfully 3ms
 ✓ tests/persistence/rollout-recorder.test.ts > RolloutRecorder > startRecording > should write session header for JSONL format 0ms
 ✓ tests/persistence/rollout-recorder.test.ts > RolloutRecorder > startRecording > should emit recordingStarted event 0ms
 ✓ tests/persistence/rollout-recorder.test.ts > RolloutRecorder > startRecording > should throw error if already recording 1ms
 ✓ tests/persistence/rollout-recorder.test.ts > RolloutRecorder > startRecording > should merge custom session metadata 0ms
 ✓ tests/persistence/rollout-recorder.test.ts > RolloutRecorder > event recording > should record events in JSONL format 0ms
 ✓ tests/persistence/rollout-recorder.test.ts > RolloutRecorder > event recording > should include metadata when configured 0ms
 ✓ tests/persistence/rollout-recorder.test.ts > RolloutRecorder > event recording > should filter events when filter is provided 0ms
 ✓ tests/persistence/rollout-recorder.test.ts > RolloutRecorder > event recording > should emit eventRecorded event 0ms
 ✓ tests/persistence/rollout-recorder.test.ts > RolloutRecorder > event recording > should handle recording errors gracefully 0ms
 ✓ tests/persistence/rollout-recorder.test.ts > RolloutRecorder > stopRecording > should stop recording and return output path 0ms
 ✓ tests/persistence/rollout-recorder.test.ts > RolloutRecorder > stopRecording > should write complete JSON for JSON format 0ms
 ✓ tests/persistence/rollout-recorder.test.ts > RolloutRecorder > stopRecording > should emit recordingCompleted event 0ms
 ✓ tests/persistence/rollout-recorder.test.ts > RolloutRecorder > stopRecording > should return null if not recording 0ms
 ✓ tests/persistence/rollout-recorder.test.ts > RolloutRecorder > stopRecording > should handle finalization errors 0ms
 ✓ tests/persistence/rollout-recorder.test.ts > RolloutRecorder > getStats > should return correct stats when not recording 0ms
 ✓ tests/persistence/rollout-recorder.test.ts > RolloutRecorder > getStats > should return correct stats when recording 0ms
 ✓ tests/persistence/rollout-recorder.test.ts > RolloutRecorder > getEvents > should return copy of events array 0ms
 ✓ tests/persistence/rollout-recorder.test.ts > RolloutRecorder > getSessionMetadata > should return null when not recording 0ms
 ✓ tests/persistence/rollout-recorder.test.ts > RolloutRecorder > getSessionMetadata > should return copy of session metadata when recording 0ms
 ✓ tests/persistence/rollout-recorder.test.ts > RolloutRecorder > path templating > should resolve template variables in output path 0ms
 ✓ tests/persistence/rollout-recorder.test.ts > RolloutRecorder > configuration validation > should use default configuration when not provided 0ms
 ✓ tests/persistence/rollout-recorder.test.ts > RolloutRecorder > configuration validation > should respect format configuration 0ms
 ✓ tests/persistence/rollout-recorder.test.ts > RolloutRecorder > configuration validation > should respect pretty print configuration 0ms
 ✓ tests/CodexClient.homedir.test.ts > CodexClient homedir fallback > returns literal path when os.homedir is unavailable 133ms
 ✓ tests/internal/nativeModule.test.ts > nativeModule utilities > derives module URL from __dirname when import.meta is unavailable 57ms
 ✓ tests/internal/nativeModule.test.ts > nativeModule utilities > derives module URL from import.meta when available 4ms
 ✓ tests/internal/nativeModule.test.ts > nativeModule utilities > falls back to process cwd when no dirname can be resolved 4ms
 ✓ tests/internal/nativeModule.test.ts > nativeModule utilities > loads module from explicit path and logs debug output 12ms
 ✓ tests/internal/nativeModule.test.ts > nativeModule utilities > resolves relative module paths against the project root 6ms
 ✓ tests/internal/nativeModule.test.ts > nativeModule utilities > reports loader errors when candidate exists but fails to load 10ms
 ✓ tests/internal/nativeModule.test.ts > nativeModule utilities > throws descriptive error when no module can be resolved 33ms
 ✓ tests/internal/nativeModule.test.ts > nativeModule utilities > formats overrides to key/value entries 9ms
 ✓ tests/CodexClient.behavior.test.ts > CodexClient advanced behaviour > registers plugins added after initialisation 12ms
 ✓ tests/CodexClient.behavior.test.ts > CodexClient advanced behaviour > swallows plugin initialise errors during connect while logging 1ms
 ✓ tests/CodexClient.behavior.test.ts > CodexClient advanced behaviour > normalises non-error plugin initialise failures during connect 0ms
 ✓ tests/CodexClient.behavior.test.ts > CodexClient advanced behaviour > returns early when already connected 1ms
 ✓ tests/CodexClient.behavior.test.ts > CodexClient advanced behaviour > wraps native loading failures in CodexConnectionError 0ms
 ✓ tests/CodexClient.behavior.test.ts > CodexClient advanced behaviour > wraps native constructor errors during connect 0ms
 ✓ tests/CodexClient.behavior.test.ts > CodexClient advanced behaviour > omits codexHome when configuration is unset 0ms
 ✓ tests/CodexClient.behavior.test.ts > CodexClient advanced behaviour > annotates connection errors with environment codex home when available 3ms
 ✓ tests/CodexClient.behavior.test.ts > CodexClient advanced behaviour > wraps unexpected retry helper failures with CodexConnectionError 0ms
 ✓ tests/CodexClient.behavior.test.ts > CodexClient advanced behaviour > reinitialises session when createConversation is called twice 0ms
 ✓ tests/CodexClient.behavior.test.ts > CodexClient advanced behaviour > sends attachments in sendMessage and honours custom items in sendUserTurn 1ms
 ✓ tests/CodexClient.behavior.test.ts > CodexClient advanced behaviour > falls back to configured default effort when model variants omit it 0ms
 ✓ tests/CodexClient.behavior.test.ts > CodexClient advanced behaviour > allows effort to remain undefined when no defaults are configured 0ms
 ✓ tests/CodexClient.behavior.test.ts > CodexClient advanced behaviour > submits interrupt and approval decisions 0ms
 ✓ tests/CodexClient.behavior.test.ts > CodexClient advanced behaviour > logs a warning when closing the session fails 0ms
 ✓ tests/CodexClient.behavior.test.ts > CodexClient advanced behaviour > logs parsing failures when the native layer returns malformed events 2ms
 ✓ tests/CodexClient.behavior.test.ts > CodexClient advanced behaviour > logs plugin onError hook failures surfaced during dispatch 2ms
 ✓ tests/CodexClient.behavior.test.ts > CodexClient advanced behaviour > cleans up iterators when aborted or returned 1ms
 ✓ tests/CodexClient.behavior.test.ts > CodexClient advanced behaviour > closes immediately when the abort signal is pre-aborted 0ms
 ✓ tests/CodexClient.behavior.test.ts > CodexClient advanced behaviour > cleans up listeners exactly once when events iterator ends 1ms
 ✓ tests/CodexClient.behavior.test.ts > CodexClient advanced behaviour > reports model availability failures gracefully 0ms
 ✓ tests/CodexClient.behavior.test.ts > CodexClient advanced behaviour > requires native bindings before creating conversations 0ms
 ✓ tests/CodexClient.behavior.test.ts > CodexClient advanced behaviour > wraps submission failures in CodexSessionError 0ms
 ✓ tests/CodexClient.behavior.test.ts > CodexClient advanced behaviour > throws when sending messages without a session 0ms
 ✓ tests/CodexClient.behavior.test.ts > CodexClient advanced behaviour > logs closing errors when ending a session 0ms
 ✓ tests/CodexClient.behavior.test.ts > CodexClient advanced behaviour > waits for the event loop to settle when closing an active session 0ms
 ✓ tests/CodexClient.behavior.test.ts > CodexClient advanced behaviour > runs plugin hooks and tolerates failures 0ms
 ✓ tests/CodexClient.behavior.test.ts > CodexClient advanced behaviour > handles malformed payloads during event streaming 0ms
 ✓ tests/CodexClient.behavior.test.ts > CodexClient advanced behaviour > emits errors when the event stream rejects 0ms
 ✓ tests/CodexClient.behavior.test.ts > CodexClient advanced behaviour > emits specialised events via routeEvent mapping 0ms
 ✓ tests/CodexClient.behavior.test.ts > CodexClient advanced behaviour > resolves CODEX_HOME from environment and expands ~ patterns 0ms
 ✓ tests/CodexClient.behavior.test.ts > CodexClient advanced behaviour > does not restart the event loop when already active 0ms
 ✓ tests/CodexClient.behavior.test.ts > CodexClient advanced behaviour > wrap helper methods expose structured errors 0ms
 ✓ tests/CodexClient.test.ts > CodexClient > connects with resolved codexHome 6ms
 ✓ tests/CodexClient.test.ts > CodexClient > sends user message submissions as JSON payload 1ms
 ✓ tests/CodexClient.test.ts > CodexClient > sends user turn with defaults and overrides 1ms
 ✓ tests/CodexClient.test.ts > CodexClient > provides async iterator for events 2ms
 ✓ tests/CodexClient.test.ts > CodexClient > invokes plugins around submissions and events 4ms
 ✓ tests/CodexClient.test.ts > CodexClient > emits error and stops event loop when nextEvent rejects 0ms
 ✓ tests/CodexClient.test.ts > CodexClient > overrides turn context through submissions 0ms
 ✓ tests/CodexClient.test.ts > CodexClient > validates override turn context input 0ms
 ✓ tests/CodexClient.test.ts > CodexClient > rejects non-object sandbox policies during override 0ms
 ✓ tests/CodexClient.test.ts > CodexClient > rejects workspace-write sandbox policy with a non-boolean network_access value 0ms
 ✓ tests/CodexClient.test.ts > CodexClient > rejects workspace-write sandbox policy with a non-boolean exclude_tmpdir_env_var value 0ms
 ✓ tests/CodexClient.test.ts > CodexClient > rejects workspace-write sandbox policy with a non-boolean exclude_slash_tmp value 0ms
 ✓ tests/CodexClient.test.ts > CodexClient > rejects workspace-write sandbox policy with a non-array writable_roots value 0ms
 ✓ tests/CodexClient.test.ts > CodexClient > rejects workspace-write sandbox policy with a writable_roots entry that is not a string 0ms
 ✓ tests/CodexClient.test.ts > CodexClient > rejects sandbox policies with unknown modes 0ms
 ✓ tests/CodexClient.test.ts > CodexClient > overrides turn context with workspace-write sandbox policy 0ms
 ✓ tests/CodexClient.test.ts > CodexClient > overrides turn context with model resolution when effort is omitted 0ms
 ✓ tests/CodexClient.test.ts > CodexClient > adds entries to history via submissions 0ms
 ✓ tests/CodexClient.test.ts > CodexClient > rejects blank history entries 0ms
 ✓ tests/CodexClient.test.ts > CodexClient > requests specific history entries 0ms
 ✓ tests/CodexClient.test.ts > CodexClient > validates history entry request options 0ms
 ✓ tests/CodexClient.test.ts > CodexClient > requests MCP tool listings 0ms
 ✓ tests/CodexClient.test.ts > CodexClient > requests custom prompt listings 0ms
 ✓ tests/CodexClient.test.ts > CodexClient > compacts the conversation context 0ms
 ✓ tests/CodexClient.test.ts > CodexClient > submits review requests with normalization 0ms
 ✓ tests/CodexClient.test.ts > CodexClient > accepts snake_case review hints without renormalizing 0ms
 ✓ tests/CodexClient.test.ts > CodexClient > validates review request input 5ms
 ✓ tests/CodexClient.test.ts > CodexClient > rejects snake_case review hints when blank 1ms
 ✓ tests/CodexClient.test.ts > CodexClient > type guard helpers > returns false when event types do not match the guard 0ms
 ✓ tests/CodexClient.test.ts > CodexClient > type guard helpers > validates payload shapes before emitting guard-specific events 0ms
 ✓ tests/CodexClient.test.ts > CodexClient > overrideTurnContext sandbox policy validation > accepts workspace-write sandbox policies with valid configuration 0ms
 ✓ tests/CodexClient.test.ts > CodexClient > overrideTurnContext sandbox policy validation > rejects non-object sandbox policies 0ms
 ✓ tests/CodexClient.test.ts > CodexClient > overrideTurnContext sandbox policy validation > rejects workspace-write sandbox policies with non-boolean network access 0ms
 ✓ tests/CodexClient.test.ts > CodexClient > overrideTurnContext sandbox policy validation > rejects workspace-write sandbox policies with non-boolean exclude_tmpdir_env_var 0ms
 ✓ tests/CodexClient.test.ts > CodexClient > overrideTurnContext sandbox policy validation > rejects workspace-write sandbox policies with non-boolean exclude_slash_tmp 0ms
 ✓ tests/CodexClient.test.ts > CodexClient > overrideTurnContext sandbox policy validation > rejects workspace-write sandbox policies with invalid writable roots entries 0ms
 ✓ tests/CodexClient.test.ts > CodexClient > overrideTurnContext sandbox policy validation > rejects sandbox policies with unknown modes 0ms
 ✓ tests/CodexClient.test.ts > CodexClient > requests conversation path and shutdown submissions 0ms
 ✓ tests/CodexClient.test.ts > CodexClient > routes new event types through routeEvent 1ms
 ✓ tests/CodexClient.test.ts > CodexClient > prevents guard-protected events from emitting when payloads are invalid 0ms
 ✓ tests/CodexClient.test.ts > CodexClient > emits errors and stops the event loop when nextEvent throws 1ms
 ✓ tests/CodexClient.test.ts > CodexClient > closes sessions gracefully 0ms
 ✓ tests/CodexClient.test.ts > CodexClient > checks model availability 0ms
 ✓ tests/CodexClient.test.ts > CodexClient > responds to patch approval requests with the correct payload 0ms
 ✓ tests/CodexClient.test.ts > CodexClient > validates active sessions before responding to patch approvals 0ms
 ✓ tests/integration/CodexClient.integration.test.ts > CodexClient (integration) > streams responses end-to-end via mock native module 4ms
 ✓ tests/integration/CodexClient.integration.test.ts > CodexClient (integration) > emits approval requests and records approval decisions 0ms
 ✓ tests/integration/CodexClient.integration.test.ts > CodexClient (integration) > submits user messages and streams notifications from the harness 0ms
 ✓ tests/integration/CodexClient.integration.test.ts > CodexClient (integration) > submits interrupt operations and closes the stream on shutdown 0ms
 ✓ tests/integration/CodexClient.integration.test.ts > CodexClient (integration) > submits patch approvals after receiving requests from the runtime 0ms
 ✓ tests/integration/CodexClient.integration.test.ts > CodexClient (integration) > emits lifecycle events and surfaces status information 6ms
 ✓ tests/monitoring/data-storage.test.ts > DataStorage > startMonitoring > should start monitoring successfully 3ms
 ✓ tests/monitoring/data-storage.test.ts > DataStorage > startMonitoring > should throw error if already monitoring 1ms
 ✓ tests/monitoring/data-storage.test.ts > DataStorage > startMonitoring > should emit monitoringStarted event 0ms
 ✓ tests/monitoring/data-storage.test.ts > DataStorage > startMonitoring > should handle client connection errors gracefully 0ms
 ✓ tests/monitoring/data-storage.test.ts > DataStorage > event collection > should collect rate limit data from token_count events 1ms
 ✓ tests/monitoring/data-storage.test.ts > DataStorage > event collection > should collect request timing data 0ms
 ✓ tests/monitoring/data-storage.test.ts > DataStorage > event collection > should collect error rate data 0ms
 ✓ tests/monitoring/data-storage.test.ts > DataStorage > event collection > should collect system health metrics 0ms
 ✓ tests/monitoring/data-storage.test.ts > DataStorage > event collection > should ignore unsupported event types 0ms
 ✓ tests/monitoring/data-storage.test.ts > DataStorage > event collection > should emit dataPointCollected event 0ms
 ✓ tests/monitoring/data-storage.test.ts > DataStorage > event collection > should handle malformed events gracefully 0ms
 ✓ tests/monitoring/data-storage.test.ts > DataStorage > data management > should respect maxDataPoints limit 0ms
 ✓ tests/auth.test.ts > loginWithApiKey > throws when API key is empty 1ms
 ✓ tests/auth.test.ts > loginWithApiKey > writes auth.json to the provided codex home with trimmed key 3ms
 ✓ tests/auth.test.ts > loginWithApiKey > honours CODEX_HOME when not provided explicitly 5ms
 ✓ tests/auth.test.ts > loginWithApiKey > throws when codex home directory does not exist 0ms
 ✓ tests/auth.test.ts > loginWithApiKey > propagates errors when auth.json write fails (guaranteed bad response) 10ms
 ✓ tests/auth.test.ts > loginWithApiKey > allows mocked writes for a fake good response 3ms
 × tests/auth.test.ts > loginWithApiKey > throws error when home directory cannot be determined 5ms
   → expected function to throw an error, but it didn't
 × tests/auth.test.ts > loginWithApiKey > handles edge case when os.homedir returns empty string 0ms
   → expected function to throw an error, but it didn't
 ✓ tests/CodexClient.homedir.test.ts > CodexClient homedir fallback > expands bare tilde to the current home directory 47ms
 ✓ tests/CodexClient.homedir.test.ts > CodexClient homedir fallback > expands unix-style tilde paths 19ms
 ✓ tests/CodexClient.homedir.test.ts > CodexClient homedir fallback > expands windows-style tilde paths 43ms
 ✓ tests/auth.test.ts > Live Authentication Integration > verifies API key authentication behavior with invalid keys 76ms
 ✓ tests/CodexClient.homedir.test.ts > CodexClient homedir fallback > appends suffixes for explicit user paths after tilde 7ms
 ✓ tests/CodexClient.homedir.test.ts > CodexClient homedir fallback > returns trimmed value when only whitespace is configured 4ms
 ✓ tests/persistence/conversation-resumer.test.ts > ConversationResumer > resumeConversation > should resume conversation successfully with default options 39ms
 ✓ tests/persistence/conversation-resumer.test.ts > ConversationResumer > resumeConversation > should skip validation when validateData is false 40ms
 ✓ tests/conversation-manager.test.ts > ConversationManager > createConversation > should create a new conversation successfully 1ms
 ✓ tests/conversation-manager.test.ts > ConversationManager > createConversation > should respect maxConversations limit 1ms
 ✓ tests/conversation-manager.test.ts > ConversationManager > createConversation > should use custom conversation ID when provided 1ms
 ✓ tests/conversation-manager.test.ts > ConversationManager > createConversation > should merge configuration correctly 2ms
 ✓ tests/conversation-manager.test.ts > ConversationManager > createConversation > should skip auto-connect when requested 0ms
 ✓ tests/conversation-manager.test.ts > ConversationManager > createConversation > should emit conversationCreated event 1ms
 ✓ tests/conversation-manager.test.ts > ConversationManager > createConversation > should handle creation errors 0ms
 ✓ tests/conversation-manager.test.ts > ConversationManager > getConversation > should retrieve existing conversation 0ms
 ✓ tests/conversation-manager.test.ts > ConversationManager > getConversation > should throw error for non-existent conversation 2ms
 ✓ tests/conversation-manager.test.ts > ConversationManager > getConversation > should update last activity when accessing conversation 12ms
 ✓ tests/conversation-manager.test.ts > ConversationManager > removeConversation > should remove existing conversation 0ms
 ✓ tests/conversation-manager.test.ts > ConversationManager > removeConversation > should return false for non-existent conversation 0ms
 ✓ tests/conversation-manager.test.ts > ConversationManager > removeConversation > should emit conversationRemoved event 0ms
 ✓ tests/conversation-manager.test.ts > ConversationManager > removeConversation > should handle close errors gracefully 0ms
 ✓ tests/conversation-manager.test.ts > ConversationManager > resumeConversationFromRollout > should resume conversation from rollout data 0ms
 ✓ tests/conversation-manager.test.ts > ConversationManager > resumeConversationFromRollout > should respect maxConversations limit for resumed conversations 0ms
 ✓ tests/conversation-manager.test.ts > ConversationManager > resumeConversationFromRollout > should emit conversationResumed event 0ms
 ✓ tests/conversation-manager.test.ts > ConversationManager > resumeConversationFromFile > should resume conversation from file 1ms
 ✓ tests/conversation-manager.test.ts > ConversationManager > resumeConversationFromFile > should handle file read errors 0ms
 ✓ tests/conversation-manager.test.ts > ConversationManager > listConversations > should return empty list initially 6ms
 ✓ tests/conversation-manager.test.ts > ConversationManager > listConversations > should list created conversations 1ms
 ✓ tests/conversation-manager.test.ts > ConversationManager > listConversations > should not include removed conversations 0ms
 ✓ tests/conversation-manager.test.ts > ConversationManager > getStats > should return correct statistics 0ms
 ✓ tests/conversation-manager.test.ts > ConversationManager > shutdown > should close all conversations on shutdown 0ms
 ✓ tests/conversation-manager.test.ts > ConversationManager > shutdown > should emit shutdown event 0ms
 ✓ tests/conversation-manager.test.ts > ConversationManager > shutdown > should prevent new conversations after shutdown 0ms
 ✓ tests/conversation-manager.test.ts > ConversationManager > shutdown > should handle close errors during shutdown 0ms
 ✓ tests/monitoring/data-storage.test.ts > DataStorage > data management > should aggregate data over time intervals 154ms
 ✓ tests/monitoring/data-storage.test.ts > DataStorage > data management > should clear data when requested 5ms
 ✓ tests/monitoring/data-storage.test.ts > DataStorage > stopMonitoring > should stop monitoring and return output path 0ms
 ✓ tests/monitoring/data-storage.test.ts > DataStorage > stopMonitoring > should save data to file when stopping 1ms
 ✓ tests/monitoring/data-storage.test.ts > DataStorage > stopMonitoring > should emit monitoringStopped event 0ms
 ✓ tests/monitoring/data-storage.test.ts > DataStorage > stopMonitoring > should return null if not monitoring 0ms
 ✓ tests/monitoring/data-storage.test.ts > DataStorage > stopMonitoring > should handle file write errors 0ms
 ✓ tests/monitoring/data-storage.test.ts > DataStorage > exportForWebsite > should export data in website format 1ms
 ✓ tests/monitoring/data-storage.test.ts > DataStorage > exportForWebsite > should include correct summary statistics 0ms
 ✓ tests/monitoring/data-storage.test.ts > DataStorage > exportForWebsite > should group time series data correctly 0ms
 ✓ tests/monitoring/data-storage.test.ts > DataStorage > exportForWebsite > should calculate trend information 0ms
 ✓ tests/monitoring/data-storage.test.ts > DataStorage > exportForWebsite > should save export to file when filePath is provided 0ms
 ✓ tests/monitoring/data-storage.test.ts > DataStorage > exportForWebsite > should handle empty data gracefully 0ms
 ✓ tests/monitoring/data-storage.test.ts > DataStorage > getStats > should return correct stats when not monitoring 0ms
 ✓ tests/monitoring/data-storage.test.ts > DataStorage > getStats > should return correct stats when monitoring 0ms
 ✓ tests/monitoring/data-storage.test.ts > DataStorage > getStats > should update data point counts 0ms
 ✓ tests/monitoring/data-storage.test.ts > DataStorage > configuration > should use default configuration when not provided 0ms
 ✓ tests/monitoring/data-storage.test.ts > DataStorage > configuration > should handle invalid aggregation intervals 0ms
 ✓ tests/monitoring/data-storage.test.ts > DataStorage > error handling > should handle event processing errors gracefully 0ms
 ✓ tests/monitoring/data-storage.test.ts > DataStorage > error handling > should emit error events for processing failures 0ms
 ✓ tests/persistence/conversation-resumer.test.ts > ConversationResumer > resumeConversation > should skip side-effect events by default 54ms
 ✓ tests/persistence/conversation-resumer.test.ts > ConversationResumer > resumeConversation > should apply event filter when provided 22ms
 ✓ tests/utils/retry.test.ts > withRetry > returns immediately on success 1ms
 ✓ tests/utils/retry.test.ts > withRetry > retries failed operations according to policy 1ms
 ✓ tests/utils/retry.test.ts > withRetry > throws after exceeding retry attempts 0ms
 ✓ tests/utils/retry.test.ts > withRetry > wraps non-error failures with descriptive message 0ms
 ✓ tests/utils/retry.test.ts > withRetry > caps exponential backoff at the configured maximum delay 0ms
 ✓ tests/utils/retry.test.ts > withRetry > logs non-error retry failures when retries remain 0ms
 ✓ tests/utils/logger.test.ts > logger utilities > returns noop logger when undefined 2ms
 ✓ tests/utils/logger.test.ts > logger utilities > fills missing methods with noop implementations 2ms
 ✓ tests/utils/logger.test.ts > logger utilities > routes log calls to correct levels 0ms
stdout | tests/version.test.ts > getCodexCliVersion > returns the version from the native module
[getCodexCliVersion] 0.39.0

 ✓ tests/CodexClientPool.test.ts > CodexClientPool > creates new clients up to the max size and reuses idle instances 2ms
 ✓ tests/CodexClientPool.test.ts > CodexClientPool > wraps callback execution via withClient 0ms
 ✓ tests/CodexClientPool.test.ts > CodexClientPool > closes all clients on shutdown 0ms
 ✓ tests/CodexClientPool.test.ts > CodexClientPool > rejects queued acquires when closing 1ms
 ✓ tests/version.test.ts > getCodexCliVersion > returns the version from the native module 2ms
 ✓ tests/version.test.ts > getCodexCliVersion > throws if cliVersion is missing 0ms
 ✓ tests/version.test.ts > getCodexCliVersion > throws error immediately when custom module path is provided and fails 0ms
 ✓ tests/version.test.ts > getCodexCliVersion > attempts fallback path when no module path provided and primary fails 0ms
 ✓ tests/monitoring/rate-limit-analyzer.test.ts > RateLimitAnalyzer > analyzeData > should throw error when no data points provided 1ms
 ✓ tests/monitoring/rate-limit-analyzer.test.ts > RateLimitAnalyzer > analyzeData > should analyze single data point 0ms
 ✓ tests/monitoring/rate-limit-analyzer.test.ts > RateLimitAnalyzer > analyzeData > should sort data points by timestamp 0ms
 ✓ tests/monitoring/rate-limit-analyzer.test.ts > RateLimitAnalyzer > analyzeData > should calculate correct statistics 0ms
 ✓ tests/monitoring/rate-limit-analyzer.test.ts > RateLimitAnalyzer > analyzeData > should detect increasing trend 0ms
 ✓ tests/monitoring/rate-limit-analyzer.test.ts > RateLimitAnalyzer > analyzeData > should detect decreasing trend 0ms
 ✓ tests/monitoring/rate-limit-analyzer.test.ts > RateLimitAnalyzer > projection analysis > should generate projection for increasing trend 0ms
 ✓ tests/monitoring/rate-limit-analyzer.test.ts > RateLimitAnalyzer > projection analysis > should not generate projection for decreasing trend 0ms
 ✓ tests/monitoring/rate-limit-analyzer.test.ts > RateLimitAnalyzer > projection analysis > should handle usage at 100% 0ms
 ✓ tests/monitoring/rate-limit-analyzer.test.ts > RateLimitAnalyzer > projection analysis > should set appropriate reliability levels 0ms
 ✓ tests/monitoring/rate-limit-analyzer.test.ts > RateLimitAnalyzer > summary generation > should generate safe status for low usage 0ms
 ✓ tests/monitoring/rate-limit-analyzer.test.ts > RateLimitAnalyzer > summary generation > should generate warning status for elevated usage 0ms
 ✓ tests/monitoring/rate-limit-analyzer.test.ts > RateLimitAnalyzer > summary generation > should generate critical status for high usage 0ms
 ✓ tests/monitoring/rate-limit-analyzer.test.ts > RateLimitAnalyzer > summary generation > should prioritize primary rate limit in concerns 0ms
 ✓ tests/monitoring/rate-limit-analyzer.test.ts > RateLimitAnalyzer > summary generation > should prioritize secondary rate limit when applicable 0ms
 ✓ tests/monitoring/rate-limit-analyzer.test.ts > RateLimitAnalyzer > linear regression > should handle single data point 0ms
 ✓ tests/monitoring/rate-limit-analyzer.test.ts > RateLimitAnalyzer > linear regression > should calculate correct linear regression for perfect linear data 0ms
 ✓ tests/monitoring/rate-limit-analyzer.test.ts > RateLimitAnalyzer > linear regression > should handle data with no variance 0ms
 ✓ tests/monitoring/rate-limit-analyzer.test.ts > RateLimitAnalyzer > linear regression > should handle NaN and edge cases gracefully 0ms
 ✓ tests/monitoring/rate-limit-analyzer.test.ts > RateLimitAnalyzer > time calculations > should calculate time span correctly 0ms
 ✓ tests/monitoring/rate-limit-analyzer.test.ts > RateLimitAnalyzer > time calculations > should handle daily change calculation 0ms
 ✓ tests/monitoring/rate-limit-analyzer.test.ts > RateLimitAnalyzer > edge cases > should handle missing rate limit data gracefully 0ms
 ✓ tests/monitoring/rate-limit-analyzer.test.ts > RateLimitAnalyzer > edge cases > should handle very large datasets 1ms
 ✓ tests/monitoring/rate-limit-analyzer.test.ts > RateLimitAnalyzer > edge cases > should handle projection with low confidence 0ms
 ✓ tests/resolveModelVariant.test.ts > resolveModelVariant > returns canonical slug for known alias 1ms
 ✓ tests/resolveModelVariant.test.ts > resolveModelVariant > falls back to provided model when unknown 0ms
 ✓ tests/resolveModelVariant.test.ts > resolveModelVariant > honours explicitly requested effort when supported 0ms
 ✓ tests/resolveModelVariant.test.ts > resolveModelVariant > supports canonical entries without aliases 0ms
 ✓ tests/resolveModelVariant.test.ts > resolveModelVariant > trims model names and lowercases aliases when resolving 0ms
 ✓ tests/resolveModelVariant.test.ts > resolveModelVariant > falls back to registry default when effort not supported 0ms
 ✓ tests/resolveModelVariant.test.ts > getSupportedEfforts > returns default set for unknown model 0ms
 ✓ tests/resolveModelVariant.test.ts > getSupportedEfforts > returns registry values for known aliases 0ms
 ✓ tests/persistence/conversation-resumer.test.ts > ConversationResumer > resumeConversation > should handle resumption timeout 103ms
 ✓ tests/persistence/conversation-resumer.test.ts > ConversationResumer > resumeConversation > should continue on error when continueOnError is true 35ms
 ✓ tests/persistence/conversation-resumer.test.ts > ConversationResumer > resumeConversation > should stop on error when continueOnError is false 11ms
 ✓ tests/CodexClientBuilder.test.ts > CodexClientBuilder > chains configuration helpers and builds CodexClient 2ms
 ✓ tests/CodexClientBuilder.test.ts > CodexClientBuilder > appends plugin collections without resetting previous registrations 0ms
 ✓ tests/CodexClientBuilder.test.ts > CodexClientBuilder > initialises plugin storage when addPlugins is the first registration call 0ms
 ✓ tests/internal/AsyncEventQueue.test.ts > AsyncEventQueue > yields enqueued values to awaiting consumers 2ms
 ✓ tests/internal/AsyncEventQueue.test.ts > AsyncEventQueue > buffers values when no consumer awaits 0ms
 ✓ tests/internal/AsyncEventQueue.test.ts > AsyncEventQueue > signals completion when closed 0ms
 ✓ tests/internal/AsyncEventQueue.test.ts > AsyncEventQueue > rejects pending consumers when failed 1ms
 ✓ tests/internal/AsyncEventQueue.test.ts > AsyncEventQueue > wraps non-error failures in Error instances 0ms
 ✓ tests/internal/AsyncEventQueue.test.ts > AsyncEventQueue > ignores close operations after failure 0ms
 ✓ tests/internal/AsyncEventQueue.test.ts > AsyncEventQueue > ignores repeated failures and enqueue attempts once closed 0ms
stdout | tests/system-prompt-log.test.ts > System Prompt Logging > should log system prompt information

=== FULL DEFAULT SYSTEM PROMPT AT STARTUP ===
Conversation ID: test-conversation-id

--- BEGIN SYSTEM PROMPT ---
You are a coding assistant. Be helpful and precise.
--- END SYSTEM PROMPT ---

Prompt Statistics:
  - Total length: 51 characters
  - Total lines: 1 lines

Note: Additional model-specific instructions may be appended
=========================================


 ✓ tests/errors/CodexError.test.ts > CodexError hierarchy > preserves message, code, and details 1ms
 ✓ tests/errors/CodexError.test.ts > CodexError hierarchy > provides specialised error codes 0ms
 ✓ tests/system-prompt-log.test.ts > System Prompt Logging > should log system prompt information 2ms
 ✓ tests/internal/submissions.test.ts > submission helpers > createUserInputSubmission > wraps provided items in a user_input envelope 1ms
 ✓ tests/internal/submissions.test.ts > submission helpers > createUserTurnSubmission > returns a fully populated user_turn envelope when all fields are provided 0ms
 ✓ tests/internal/submissions.test.ts > submission helpers > createUserTurnSubmission > omits effort when no value is supplied 0ms
 ✓ tests/internal/submissions.test.ts > submission helpers > createInterruptSubmission > creates an interrupt envelope with no additional data 0ms
 ✓ tests/internal/submissions.test.ts > submission helpers > createExecApprovalSubmission > maps approvals to exec_approval envelopes 0ms
 ✓ tests/internal/submissions.test.ts > submission helpers > createExecApprovalSubmission > maps rejections to denied exec approvals 0ms
 ✓ tests/internal/submissions.test.ts > submission helpers > createPatchApprovalSubmission > maps exec approvals with approve decisions to the expected envelope 0ms
 ✓ tests/internal/submissions.test.ts > submission helpers > createPatchApprovalSubmission > maps patch approvals to approved envelopes 0ms
 ✓ tests/internal/submissions.test.ts > submission helpers > createPatchApprovalSubmission > maps patch rejections to denied patch approval envelopes 0ms
 ✓ tests/persistence/conversation-resumer.test.ts > ConversationResumer > resumeConversation > should emit resumptionCompleted event 35ms
 ✓ tests/persistence/conversation-resumer.test.ts > ConversationResumer > resumeConversation > should emit eventReplayed events during replay 33ms
 ✓ tests/persistence/conversation-resumer.test.ts > ConversationResumer > resumeConversation > should emit eventReplayFailed events on replay errors 35ms
 ✓ tests/persistence/conversation-resumer.test.ts > ConversationResumer > resumeConversation > should handle client connection errors 1ms
 ✓ tests/persistence/conversation-resumer.test.ts > ConversationResumer > resumeConversation > should handle conversation creation errors 0ms
 ✓ tests/index.test.ts > package entry point > re-exports core APIs 9ms
 ✓ tests/persistence/conversation-resumer.test.ts > ConversationResumer > resumeConversationWithHistory > should return conversation ID from successful resumption 33ms
 ✓ tests/persistence/conversation-resumer.test.ts > ConversationResumer > resumeConversationWithHistory > should propagate resumption errors 0ms
 ✓ tests/persistence/conversation-resumer.test.ts > ConversationResumer > validateRolloutData > should validate correct rollout data successfully 0ms
 ✓ tests/persistence/conversation-resumer.test.ts > ConversationResumer > validateRolloutData > should detect missing session metadata 0ms
 ✓ tests/persistence/conversation-resumer.test.ts > ConversationResumer > validateRolloutData > should detect missing session ID 0ms
 ✓ tests/persistence/conversation-resumer.test.ts > ConversationResumer > validateRolloutData > should detect invalid events array 0ms
 ✓ tests/persistence/conversation-resumer.test.ts > ConversationResumer > validateRolloutData > should detect missing event timestamps 0ms
 ✓ tests/persistence/conversation-resumer.test.ts > ConversationResumer > validateRolloutData > should detect missing session_created event 0ms
 ✓ tests/persistence/conversation-resumer.test.ts > ConversationResumer > validateRolloutData > should run custom validation rules 0ms
 ✓ tests/persistence/conversation-resumer.test.ts > ConversationResumer > validateRolloutData > should handle custom validation rule errors 0ms
 ✓ tests/persistence/conversation-resumer.test.ts > ConversationResumer > validateRolloutData > should estimate replay time based on event count 0ms
 ✓ tests/persistence/conversation-resumer.test.ts > ConversationResumer > getCurrentState > should return null when not actively resuming 1ms
 ✓ tests/persistence/conversation-resumer.test.ts > ConversationResumer > getCurrentState > should return current state during resumption 335ms
 ✓ tests/persistence/conversation-resumer.test.ts > ConversationResumer > getCurrentState > should return copy of state (not reference) 34ms
 ✓ tests/persistence/conversation-resumer.test.ts > ConversationResumer > error handling > should throw ValidationError when validation fails 0ms
 ✓ tests/persistence/conversation-resumer.test.ts > ConversationResumer > error handling > should update state to failed on errors 0ms
 ✓ tests/persistence/conversation-resumer.test.ts > ConversationResumer > error handling > should clean up state after successful completion 33ms
 ✓ tests/persistence/conversation-resumer.test.ts > ConversationResumer > logging > should log resumption progress when logger is provided 34ms
 ✓ tests/persistence/conversation-resumer.test.ts > ConversationResumer > logging > should handle missing logger gracefully 33ms
 ✓ tests/conversation-manager.test.ts > ConversationManager > inactivity handling > should mark conversations as inactive after timeout 1102ms
 ✓ tests/conversation-manager.test.ts > ConversationManager > inactivity handling > should reset inactivity timer on conversation access 1102ms
 ✓ tests/conversation-manager.test.ts > ConversationManager > event handling > should set up client event handlers 1ms
 ✓ tests/conversation-manager.test.ts > ConversationManager > event handling > should emit conversationError on client error 1ms

⎯⎯⎯⎯⎯⎯⎯ Failed Tests 5 ⎯⎯⎯⎯⎯⎯⎯

 FAIL  tests/auth.test.ts > loginWithApiKey > throws error when home directory cannot be determined
AssertionError: expected function to throw an error, but it didn't
 ❯ tests/auth.test.ts:122:48
    120|     try {
    121|       // This should throw because home directory cannot be determined
    122|       expect(() => loginWithApiKey('sk-test')).toThrow(CodexAuthError);
       |                                                ^
    123|       expect(() => loginWithApiKey('sk-test')).toThrow('Unable to dete…
    124|     } finally {

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/5]⎯

 FAIL  tests/auth.test.ts > loginWithApiKey > handles edge case when os.homedir returns empty string
AssertionError: expected function to throw an error, but it didn't
 ❯ tests/auth.test.ts:140:48
    138| 
    139|     try {
    140|       expect(() => loginWithApiKey('sk-test')).toThrow(CodexAuthError);
       |                                                ^
    141|       expect(() => loginWithApiKey('sk-test')).toThrow('Unable to dete…
    142|     } finally {

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[2/5]⎯

 FAIL  tests/internal/StatusStore.test.ts > StatusStore > handles edge case time windows correctly
AssertionError: expected undefined to be '5h' // Object.is equality

[32m- Expected:[39m 
"5h"

[31m+ Received:[39m 
undefined

 ❯ tests/internal/StatusStore.test.ts:203:54
    201| 
    202|     // Should use default 5h when window_minutes is undefined
    203|     expect(status.rate_limits.primary?.window_label).toBe('5h');
       |                                                      ^
    204|     expect(status.rate_limits.secondary?.window_label).toBe('5h');
    205|   });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[3/5]⎯

 FAIL  tests/internal/StatusStore.test.ts > StatusStore > handles monthly and annual time windows
AssertionError: expected undefined to be 'Monthly' // Object.is equality

[32m- Expected:[39m 
"Monthly"

[31m+ Received:[39m 
undefined

 ❯ tests/internal/StatusStore.test.ts:246:54
    244|     store.updateFromTokenCountEvent(monthlyEvent);
    245|     let status = store.getStatus();
    246|     expect(status.rate_limits.primary?.window_label).toBe('Monthly');
       |                                                      ^
    247|     expect(status.rate_limits.secondary?.window_label).toBe('Monthly');
    248| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[4/5]⎯

 FAIL  tests/internal/StatusStore.test.ts > StatusStore > handles edge case for window label capitalization
AssertionError: expected undefined to be '2h' // Object.is equality

[32m- Expected:[39m 
"2h"

[31m+ Received:[39m 
undefined

 ❯ tests/internal/StatusStore.test.ts:330:54
    328| 
    329|     // Numeric labels like "2h" should not be capitalized
    330|     expect(status.rate_limits.primary?.window_label).toBe('2h');
       |                                                      ^
    331|     expect(status.rate_limits.secondary?.window_label).toBe('3h');
    332| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[5/5]⎯


 Test Files  2 failed | 25 passed (27)
      Tests  5 failed | 417 passed (422)
   Start at  18:31:00
   Duration  2.95s (transform 1.44s, setup 0ms, collect 2.82s, tests 4.03s, environment 4ms, prepare 2.90s)

